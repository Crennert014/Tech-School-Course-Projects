package Chapter16;

import java.time.LocalTime;
import javafx.animation.KeyFrame;
import javafx.animation.Timeline;
import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.layout.VBox;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javafx.scene.paint.Color;
import javafx.stage.Stage;
import javafx.util.Duration;

public class TimerCountdown extends Application {
    private Label timerLabel;
    private Timeline timeLine;
    private LocalTime endTime;
    private Button playSongButton;
    private VBox root;
    private static final int TIMER_SECONDS = 30; 

    @Override
    public void start(Stage primaryStage) {
        // Timer Label
        timerLabel = new Label(formatDuration(Duration.seconds(TIMER_SECONDS)));
        timerLabel.setStyle("-fx-font-size: 4em;");
        timerLabel.setTextFill(Color.BLUE);

        // Start Button
        Button startBt = new Button("Start");
        startBt.setOnAction(e -> {
            startBt.setDisable(true);
            timerLabel.setText(formatDuration(Duration.seconds(TIMER_SECONDS)));
            if (playSongButton != null) {
                playSongButton.setVisible(false);
            }
            startCountdown(TIMER_SECONDS, startBt);
        });

        // Play Song Button (hidden initially)
        playSongButton = new Button("Play Song");
        playSongButton.setVisible(false);
        playSongButton.setOnAction(e -> playSong());

        // Layout
        root = new VBox(20, timerLabel, startBt, playSongButton);
        root.setAlignment(Pos.CENTER);

        // Scene
        Scene scene = new Scene(root, 350, 250);
        primaryStage.setTitle("Countdown Timer");
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    private void startCountdown(int seconds, Button startBt) {
        endTime = LocalTime.now().plusSeconds(seconds);

        if (timeLine != null) {
            timeLine.stop();
        }

        timeLine = new Timeline(new KeyFrame(Duration.seconds(1), event -> {
            java.time.Duration remaining = java.time.Duration.between(LocalTime.now(), endTime);

            if (remaining.isNegative() || remaining.isZero()) {
                timerLabel.setText(formatDuration(Duration.ZERO));
                timeLine.stop();
                playSongButton.setVisible(true);
                startBt.setDisable(false);
            } else {
                timerLabel.setText(formatDuration(Duration.seconds(remaining.getSeconds())));
            }
        }));
        timeLine.setCycleCount(Timeline.INDEFINITE);
        timeLine.play();
    }

    private String formatDuration(Duration duration) {
        long seconds = (long) duration.toSeconds();
        long h = seconds / 3600;
        long m = (seconds % 3600) / 60;
        long s = seconds % 60;
        return String.format("%02d:%02d:%02d", h, m, s);
    }

    private void playSong() {
        // Replace this path with your local song file
        String songPath = "file: /Users/student/Downloads/_Two Feet - Apple Music.html"; // Example: "file:C:/Users/Me/Music/song.mp3"
        try {
            Media media = new Media(songPath);
            MediaPlayer mediaPlayer = new MediaPlayer(media);
            mediaPlayer.play();
        } catch (Exception e) {
            System.out.println("Failed to play song: " + e.getMessage());
        }
    }

    public static void main(String[] args) {
        launch(args);
    }
}
