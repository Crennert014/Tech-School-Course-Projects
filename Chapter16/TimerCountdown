package Chapter16;
import java.time.LocalTime;

import javafx.animation.KeyFrame;
import javafx.animation.PathTransition;
import javafx.animation.Timeline;
import javafx.application.Application;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.RadioButton;
import javafx.scene.control.ToggleGroup;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import java.time.Duration;
import javafx.stage.Stage;
import java.time.Duration;
import java.time.LocalTime;

public class TimerCountdown extends Application {
    private Label timerLabel;
    private Timeline timeLine;
    private LocalTime endTime;
    public static void main(String[] args) {
        launch(args);
    }
    public void start(Stage primaryStage) {
        // Create Pane
        Pane pane = new Pane();
        pane.setPrefHeight(300);
        pane.setPrefWidth(200);

        // Create Timer
        timerLabel = new Label("30");
        timerLabel.setStyle("-fx-font-size: 4em;");
        timerLabel.setTextFill(Color.BLUE);

        // Create VBox for timer location
        VBox root = new VBox(timerLabel);
        root.setStyle("-fx- alignment: center;");

        //Create a Start Button 
        Button startBt = new Button("Start");
        
        //Create HBox
        HBox hBox = new HBox();
        hBox.getChildren().add(startBt);
        BorderPane borderPane = new BorderPane();
        borderPane.setBottom(startBt);
        
        //Set Listener
        startBt.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent e) {
                timerLabel.
            }
        });

        //Set Scene
        Scene scene = new Scene(root, 300, 200);
        primaryStage.setTitle("Countdown Timer");
        primaryStage.setScene(scene);
        primaryStage.show();
        
        startCountdown(30);
    }

    private void startCountdown( int seconds) {
        endTime = LocalTime.now().plusSeconds(seconds);
        
        timeLine = new Timeline();
        timeLine.getKeyFrames().add(new KeyFrame(Duration.seconds(1), event -> {
            java.time.Duration remaining = java.time.Duration.between(LocalTime.now(), endTime);
        
            if (remaining.isPositive()) {
                timerLabel.setText(formatDuration(remaining));
            } else {
                timerLabel.setText(formatDuration(java.time.Duration.ZERO));
                timeLine.stop();
                // Optionally, add an action when the countdown finishes
                System.out.println("Countdown finished!");
            }
        }));
        timeLine.setCycleCount(Timeline.INDEFINITE); // Run indefinitely until stopped
        timeLine.play();
        }
        private String formatDuration(java.time.Duration duration) {
            long hours = duration.toHours();
            long minutes = duration.toMinutesPart();
            long seconds = duration.toSecondsPart();
            return String.format("%02d:%02d:%02d", hours, minutes, seconds);
    }           
}

