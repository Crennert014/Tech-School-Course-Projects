package Chapter14;


import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Pane;
import javafx.scene.layout.BorderPane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Circle;
import javafx.stage.Stage;
  
 public class bouncingBall extends Application {
    private CirclePane circlePane = new CirclePane();

    public static void main(String[] args) {
        launch(args);
    }

  @Override // Override the start method in the Application class
  public void start(Stage primaryStage) {
       BorderPane ballPane = new BorderPane();
       HBox hBox = new HBox(ballPane);
       

        Button btRight = new Button("RIGHT");
        Button btLeft = new Button("LEFT");
        Button btUp = new Button("UP");
        Button btDown = new Button("DOWN");

        hBox.getChildren().add(btRight);
        hBox.getChildren().add(btLeft);
        hBox.getChildren().add(btUp);
        hBox.getChildren().add(btDown);

      

        BorderPane borderPane = new BorderPane();
        borderPane.setCenter(ballPane);
        borderPane.setBottom(hBox);
        BorderPane.setAlignment(hBox, Pos.CENTER);

       

        CirclePane circlePane = new CirclePane();
        // Create and register the handler
        btRight.setOnAction((e) -> {
            circlePane.setX(circlePane.getX() + 10);
        });

        btLeft.setOnAction((e) -> {
            circlePane.setX(circlePane.getX() - 10);
        });

        btUp.setOnAction((e) -> {
            circlePane.setY(circlePane.getY() + 10);
        });

        btDown.setOnAction((e) -> {
            circlePane.setY(circlePane.getY() - 10);
        });
 Scene scene = new Scene(borderPane, 400, 250);
        primaryStage.setTitle("ControlCircle"); // Set the stage title
        primaryStage.setScene(scene); // Place the scene in the stage
        primaryStage.show(); // Display the stage
    }

}



