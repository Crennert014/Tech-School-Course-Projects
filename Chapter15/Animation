package Chapter15;

import javafx.animation.PathTransition;
import javafx.animation.Timeline;
import javafx.application.Application;
import javafx.collections.ObservableList;
import javafx.scene.Scene;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;
import javafx.scene.shape.Circle;
import javafx.scene.shape.Polygon;
import javafx.stage.Stage;
import javafx.util.Duration;

    public class Animation extends Application {
        public static void main(String[] args) {
            launch(args);
        }
        @Override // Override the start method in the Application class 
    public void start(Stage primaryStage) {
        // Create a pane
    Pane pane = new Pane();

        // Create a rectangle
    Rectangle rectangle = new Rectangle (0, 0, 25, 50);
        rectangle.setFill(Color.ORANGE);

        // Create a Pentagon
    Polygon polygon = new Polygon();
    polygon.setFill(Color.RED);
    polygon.setStroke(Color.BLACK);
    ObservableList<Double> list = polygon.getPoints();
    
    double centerX = polygon.getWidth() / 2, centerY = getHeight() / 2;
    double radius = Math.min(getWidth(), getHeight()) * 0.4;
    int s = 5;
    // Add points to the polygon list
    for (int i = 0; i < s; i++) {
    list.add(centerX + radius * Math.cos(2 * i * Math.PI / s));
    list.add(centerY - radius * Math.sin(2 * i * Math.PI / s));
    }   
    StackPane stackPane = new StackPane();
    stackPane.getChildren().add(polygon);
    getChildren().add(stackPane);
    polygon.setStroke(Color.WHITE); // White border
    polygon.setStrokeWidth(8); // Thicker border
    
    getChildren().add(polygon);

        // Create a path transition
    PathTransition pt = new PathTransition();
    pt.setDuration(Duration.millis(4000));
    pt.setPath(circle);
    pt.setNode(rectangle);
    pt.setOrientation(
    PathTransition.OrientationType.ORTHOGONAL_TO_TANGENT);
    pt.setCycleCount(Timeline.INDEFINITE);
    pt.setAutoReverse(true);
    pt.play(); // Start animation

    circle.setOnMousePressed(e -> pt.pause());
    circle.setOnMouseReleased(e -> pt.play());

        // Create a scene and place it in the stage
    Scene scene = new Scene(pane, 250, 200);
    primaryStage.setTitle("PathTransitionDemo"); // Set the stage title
    primaryStage.setScene(scene); // Place the scene in the stage
    primaryStage.show(); // Display the stage
   }
  }
