
import java.util.Stack;

import javafx.application.Application;
import javafx.collections.ObservableList;
import javafx.scene.Scene;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.scene.paint.Color;
import javafx.stage.Stage;
import javafx.scene.shape.Polygon;

public class helloWorld extends Application {
@Override // Override the start method in the Application class
public void start(Stage primaryStage) {
// Create a scene and place it in the stage
Scene scene = new Scene(new MyPolygon(), 400, 400);
primaryStage.setTitle("StopSign"); // Set the stage title
primaryStage.setScene(scene); // Place the scene in the stage
primaryStage.show(); // Display the stage
}
/**
* The main method is only needed for the IDE with limited
* JavaFX support. Not needed for running from the command line.
*/
public static void main(String[] args) {
launch(args);
}
}
class MyPolygon extends Pane {
private void paint() {
// Create a polygon and place polygon to pane
Polygon polygon = new Polygon();
polygon.setFill(Color.RED);
polygon.setStroke(Color.BLACK);
ObservableList<Double> list = polygon.getPoints();
polygon.setRotate(22.5);
double centerX = getWidth() / 2, centerY = getHeight() / 2;
double radius = Math.min(getWidth(), getHeight()) * 0.4;
int s = 8;
// Add points to the polygon list
for (int i = 0; i < s; i++) {
list.add(centerX + radius * Math.cos(2 * i * Math.PI / s));
list.add(centerY - radius * Math.sin(2 * i * Math.PI / s));
}
StackPane stackPane = new StackPane();
stackPane.getChildren().add(polygon);
getChildren().add(stackPane);
polygon.setStroke(Color.WHITE); // White border
polygon.setStrokeWidth(8); // Thicker border
getChildren().clear();
getChildren().add(polygon);

// Add STOP text in the center
javafx.scene.text.Text stopText = new javafx.scene.text.Text("STOP");
stopText.setFill(Color.WHITE);
stopText.setStyle("-fx-font: bold 75px Arial;");
// Center the text

stopText.setX(getWidth() / 2 - 97);
stopText.setY(getHeight() / 2 + 25);
getChildren().add(stopText);
}
@Override
public void setWidth(double width) {
super.setWidth(width);
paint();
}
@Override
public void setHeight(double height) {
super.setHeight(height);
paint();
}
}
